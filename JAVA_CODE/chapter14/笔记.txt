集合
    集合框架图
    Collection接口特点 方法
    Collection接口的子接口：List实现类：ArrayList LinkedList Vector
    Collection接口的子接口：Set实现类：HashSet linkedHashSet
    Map接口 特点方法 遍历方式
    Map接口的实现类：HashMap Hashtable
    Collections工具类的使用


集合框架图
    集合的理解和好处
        数组：
            1.长度开始时必须指定，而且一旦指定，不能更改
            2.保存的必须为同一类型元素
            3.使用数组进行增加元素的代码比较麻烦

        集合：
            1.可以动态保存任意多个对象，使用比较方便
            2.提供了一系列方便的操作对象的方法：add、remove、set、get
            3.使用集合添加、删除新元素代码简洁

    单列集合
                           | - TreeSet
                 | - Set - | - HashSet
                 |
    Collection - |
                 |          | - LinkedList
                 | - List - | - ArrayList
                            | - Vector

    双列集合 - 键值对
          | - Hashtable - | - Properties
          |
    Map - | - HashMap - LinkedHashMap
          |
          | - TreeMap

Collection接口特点 方法
    1.Collection的实现子类可以存放多个元素，每个元素可以是Object
    2.有些Collection的实现类，可以存放重复的元素，有些不可以
    3.有些Collection的实现类，有些是存放有序的List，有些不是有序的Set
    4.Collection接口没有直接的实现子类，是通过Set和List来实现的

    常用方法
        1.add
        2.remove
        3.contains查找元素是否存在
        4.size 获取元素个数
        5.isEmpty 判断是否为空
        6.clear 清空
        7.addAll 添加多个
        8.containsAll 查找多个元素是否都存在
        9.removeAll 删除多个
        10.
    Collection接口遍历方式：
        方法一：使用迭代器 - Iterator
            1.Iterator对象称为迭代器，主要用于遍历Collection集合中的元素
            2.所有实现了Collection接口的集合类都有一个iterator方法，用以返回一个实现了Iterator接口的对象，即可以返回一个迭代器
            3.结构：
                Iterator it = coll.iterator();//得到一个集合的迭代器
                //hasNext():判断是否还有下一个元素
                while(it.hasNext()){
                    //next();指针下移
                    System.out.println(it.next());
                }//调用next之前必须先用hasNext检测，否则会报错
                //如果还需要重新遍历，需要重置迭代器it = coll.iterator();
            4.Iterator仅用于遍历集合，Iterator本身并不存放对象
        方法一：增强for
            增强for循环可以代替迭代器，就是简化后的迭代器，本质是一样的
            基本语法：
                for(元素类型 元素名：集合或数组名){
                    访问元素
                }

Collection接口的子接口：List实现类：ArrayList LinkedList Vector
    List接口基本介绍：
        1.List集合类中元素有序且可重复
        2.List集合类中的每个元素都有对应的顺序索引，即支持索引
        3.List容器中的元素都对应一个整数型的序号记载其在容器中的位置，可以根据序号存取容器中的元素
        4.实现的类有ArrayList LinkedList Vector
    方法：
        1.add
        2.addAll
        3.get
        4.indexOf
        5.lastIndex
        6.remove
        7.set
        8.subList

    遍历方式：
        1.迭代器iterator
        2.增强for
        3.普通for



Collection接口的子接口：Set实现类：HashSet linkedHashSet




Map接口 特点方法 遍历方式
Map接口的实现类：HashMap Hashtable
Collections工具类的使用
